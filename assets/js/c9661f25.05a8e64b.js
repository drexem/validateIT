"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4517],{8024:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=t(4848),n=t(8453);const l={sidebar_position:1},s="Library - user documentation",o={id:"lib/user/index",title:"Library - user documentation",description:"Here you will find all you need to know to use the Validator Library!",source:"@site/docs/lib/user/index.md",sourceDirName:"lib/user",slug:"/lib/user/",permalink:"/validateIT/docs/lib/user/",draft:!1,unlisted:!1,editUrl:"https://gitlab.mff.cuni.cz/kolcunm/csv-validator/docs/lib/user/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Library",permalink:"/validateIT/docs/lib/"},next:{title:"Library - administration documentation",permalink:"/validateIT/docs/lib/administration/"}},i={},c=[{value:"Tutorials",id:"tutorials",level:2}];function u(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h1,{id:"library---user-documentation",children:"Library - user documentation"}),"\n",(0,a.jsx)(r.p,{children:"Here you will find all you need to know to use the Validator Library!"}),"\n",(0,a.jsx)(r.h2,{id:"tutorials",children:"Tutorials"}),"\n",(0,a.jsxs)(r.p,{children:["All ",(0,a.jsx)(r.a,{href:"../../general/#validation-types",children:"types"})," of validation require a ",(0,a.jsx)(r.code,{children:"IController"})," class. We create instance of it with ",(0,a.jsx)(r.code,{children:"ControllerFactory"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:"IController controller = ControllerFactory.CreateController();\n"})}),"\n",(0,a.jsxs)(r.p,{children:["Next you need to decide what ",(0,a.jsx)(r.a,{href:"../../general/#validation-types",children:"type"})," suites your need the best. Here are all types of validation you can call:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:'IController controller = ControllerFactory.CreateController();\r\n\r\nstring remoteMetadataURL = "https://w3c.github.io/csvw/tests/test011/tree-ops.csv-metadata.json";\r\nstring remoteTabularURL = "https://w3c.github.io/csvw/tests/test011/tree-ops.csv";\r\nstring localMetadaPath = @"/data/my.csv";\r\nstring localTabularPath = @"/data/schema.json";\r\n\r\n// starts remote tabular validation\r\nIResult result1 = controller.ProcessTabularData(remoteTabularURL);\r\n\r\n// start local tabular validation\r\nIResult result2 = controller.ProcessTabularData(localTabularPath);\r\n\r\n// start remote metadata validation\r\nIResult result3 = controller.ProcessMetadata(remoteMetadataURL);\r\n\r\n// start local metadata validation\r\nIResult result4 = controller.ProcessMetadata(localMetadaPath);\n'})}),"\n",(0,a.jsx)(r.p,{children:"Afterwards you can for example review the validation type by:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:'switch (result1.GetValidationResultType)\r\n{\r\n    case ValidationResultType.VALID:\r\n        Console.WriteLine("Validated files were valid!");\r\n        break;\r\n    case ValidationResultType.WARNING:\r\n        Console.WriteLine("Warnings occurred during the validation!");\r\n        break;\r\n    case ValidationResultType.ERROR:\r\n        Console.WriteLine("Errors occurred during the validaiton!");\r\n        break;\r\n}\n'})}),"\n",(0,a.jsx)(r.p,{children:"Or you can generate a result file with all the errors and warnings in one of the supported formats!"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:'string resultPath = "/data/result.csv";\r\nIResultWriter csvResultWriter = ResultWriterFactory.CreateResultWriter(ResultFileFormat.CSV);\r\ncsvResultWriter.GenerateResult(resultPath, result1.GetValidationDetails);\n'})}),"\n",(0,a.jsx)(r.p,{children:"Or you can review individual errors! (Similarly for warnings.):"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:"// iterate through general errors\r\nforeach(var error in result1.GetValidationDetails.GeneralErrors)\r\n{\r\n    Console.WriteLine(error.GetMessage(CultureInfo.CurrentCulture));\r\n}\r\n\r\n// foreach errors related to specific table\r\nforeach(var tableDetails in result1.GetValidationDetails.TableValidationDetails)\r\n{\r\n    foreach(var error in tableDetails.Errors)\r\n    {\r\n        Console.WriteLine(error.GetMessage(CultureInfo.CurrentCulture));\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(r.p,{children:"Whole example:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-csharp",children:'IController controller = ControllerFactory.CreateController();\r\n\r\nstring remoteMetadataURL = "https://w3c.github.io/csvw/tests/test011/tree-ops.csv-metadata.json";\r\nstring remoteTabularURL = "https://w3c.github.io/csvw/tests/test011/tree-ops.csv";\r\nstring localMetadaPath = @"/data/my.csv";\r\nstring localTabularPath = @"/data/schema.json";\r\n\r\n// starts remote tabular validation\r\nIResult result1 = controller.ProcessTabularData(remoteTabularURL);\r\n\r\n// start local tabular validation\r\nIResult result2 = controller.ProcessTabularData(localTabularPath);\r\n\r\n// start remote metadata validation\r\nIResult result3 = controller.ProcessMetadata(remoteMetadataURL);\r\n\r\n// start local metadata validation\r\nIResult result4 = controller.ProcessMetadata(localMetadaPath);\r\n\r\nswitch (result1.GetValidationResultType)\r\n{\r\n    case ValidationResultType.VALID:\r\n        Console.WriteLine("Validated files were valid!");\r\n        break;\r\n    case ValidationResultType.WARNING:\r\n        Console.WriteLine("Warnings occurred during the validation!");\r\n        break;\r\n    case ValidationResultType.ERROR:\r\n        Console.WriteLine("Errors occurred during the validaiton!");\r\n        break;\r\n}\r\n\r\n// iterate through general errors\r\nforeach (var error in result1.GetValidationDetails.GeneralErrors)\r\n{\r\n    Console.WriteLine(error.GetMessage(CultureInfo.CurrentCulture));\r\n}\r\n\r\n// foreach errors related to specific table\r\nforeach(var tableDetails in result1.GetValidationDetails.TableValidationDetails)\r\n{\r\n    foreach(var error in tableDetails.Errors)\r\n    {\r\n        Console.WriteLine(error.GetMessage(CultureInfo.CurrentCulture));\r\n    }\r\n}\r\n\r\nstring resultPath = @"/data/result.csv";\r\nIResultWriter csvResultWriter = ResultWriterFactory.CreateResultWriter(ResultFileFormat.CSV);\r\ncsvResultWriter.GenerateResult(resultPath, result1.GetValidationDetails);\n'})}),"\n",(0,a.jsxs)(r.p,{children:["For more detailed specification of individual classes and interfaces you can review the ",(0,a.jsx)(r.a,{href:"../developer/",children:"developer documentation"}),"."]})]})}function d(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>o});var a=t(6540);const n={},l=a.createContext(n);function s(e){const r=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(l.Provider,{value:r},e.children)}}}]);